{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/ThemeChanger.jsx","components/App.jsx","index.js"],"names":["Header","_ref","currentTheme","headerThemeClass","concat","React","createElement","className","Footer","year","Date","getFullYear","Note","props","title","content","onClick","onDelete","id","DeleteIcon","CreateArea","_useState","useState","_useState2","_slicedToArray","isExpanded","setExpanded","_useState3","_useState4","note","setNote","handleChange","event","_event$target","target","name","value","prevNote","_objectSpread","_defineProperty","onChange","placeholder","rows","Zoom","in","Fab","onAdd","preventDefault","AddIcon","ThemeChanger","onThemeChange","selectedTheme","setSelectedTheme","showOptions","setShowOptions","handleThemeChange","theme","App","notes","setNotes","setCurrentTheme","deleteNote","prevNotes","filter","noteItem","index","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","newNote","_toConsumableArray","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c72c57f7.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header({ currentTheme }) {\n  // Use the currentTheme prop to set the appropriate theme class\n  const headerThemeClass = `header-${currentTheme}`;\n\n  return (\n    <header className={headerThemeClass}>\n      {/* Header content */}\n      <h1>ModoList</h1>\n      {/* ... Other header content */}\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction Note(props) {\n  function handleClick() {\n    props.onDelete(props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}>\n        <DeleteIcon />\n      </button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n  const [isExpanded, setExpanded] = useState(false);\n\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value,\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\",\n    });\n    event.preventDefault();\n  }\n\n  function expand() {\n    setExpanded(true);\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        {isExpanded && (\n          <input\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder=\"Title\"\n          />\n        )}\n\n        <textarea\n          name=\"content\"\n          onClick={expand}\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows={isExpanded ? 3 : 1}\n        />\n        <Zoom in={isExpanded}>\n          <Fab onClick={submitNote}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\r\nimport \"./theme-changer.css\";\r\n\r\nfunction ThemeChanger({ onThemeChange }) {\r\n  const [selectedTheme, setSelectedTheme] = useState(\"light\");\r\n  const [showOptions, setShowOptions] = useState(false);\r\n\r\n  const handleThemeChange = (theme) => {\r\n    setSelectedTheme(theme);\r\n    onThemeChange(theme);\r\n  };\r\n\r\n  const toggleOptions = () => {\r\n    setShowOptions(!showOptions);\r\n  };\r\n\r\n  return (\r\n    <div className=\"theme-changer-container\">\r\n      <div className=\"theme-changer\">\r\n        <button\r\n          className={`theme-button current-theme ${selectedTheme}`}\r\n          onClick={toggleOptions}\r\n        >\r\n          Current Theme: {selectedTheme}\r\n        </button>\r\n        {showOptions && (\r\n          <div className=\"theme-options\">\r\n            <button\r\n              className={`theme-button light ${\r\n                selectedTheme === \"light\" ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleThemeChange(\"light\")}\r\n            >\r\n              Light\r\n            </button>\r\n            <button\r\n              className={`theme-button dark ${\r\n                selectedTheme === \"dark\" ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleThemeChange(\"dark\")}\r\n            >\r\n              Dark\r\n            </button>\r\n            <button\r\n              className={`theme-button summer ${\r\n                selectedTheme === \"summer\" ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleThemeChange(\"summer\")}\r\n            >\r\n              Summer\r\n            </button>\r\n            <button\r\n              className={`theme-button spring ${\r\n                selectedTheme === \"spring\" ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleThemeChange(\"spring\")}\r\n            >\r\n              Spring\r\n            </button>\r\n            <button\r\n              className={`theme-button fall ${\r\n                selectedTheme === \"fall\" ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleThemeChange(\"fall\")}\r\n            >\r\n              Fall\r\n            </button>\r\n            <button\r\n              className={`theme-button winter ${\r\n                selectedTheme === \"winter\" ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => handleThemeChange(\"winter\")}\r\n            >\r\n              Winter\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThemeChanger;\r\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport ThemeChanger from \"./ThemeChanger\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [currentTheme, setCurrentTheme] = useState(\"light\"); // Initial theme\n\n  // Load notes from local storage when the component mounts\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"modolist-notes\"));\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  // Save notes to local storage whenever the notes state changes\n  useEffect(() => {\n    localStorage.setItem(\"modolist-notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  // Update the theme\n  const handleThemeChange = (theme) => {\n    setCurrentTheme(theme);\n  };\n\n  function addNote(newNote) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className={`app ${currentTheme}`}>\n      <Header currentTheme={currentTheme} />\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <ThemeChanger onThemeChange={handleThemeChange} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}