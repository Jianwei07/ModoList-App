{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Jianw/Documents/GitHub/ModoList-App/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/Jianw/Documents/GitHub/ModoList-App/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jianw\\\\Documents\\\\GitHub\\\\ModoList-App\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport ThemeChanger from \"./ThemeChanger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    notes = _useState2[0],\n    setNotes = _useState2[1];\n  var _useState3 = useState(\"light\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentTheme = _useState4[0],\n    setCurrentTheme = _useState4[1]; // Initial theme\n\n  // Load notes from local storage when the component mounts\n  useEffect(function () {\n    var savedNotes = JSON.parse(localStorage.getItem(\"modolist-notes\"));\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  // Save notes to local storage whenever the notes state changes\n  useEffect(function () {\n    localStorage.setItem(\"modolist-notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  // Update the theme\n  var handleThemeChange = function handleThemeChange(theme) {\n    setCurrentTheme(theme);\n  };\n  function addNote(newNote) {\n    setNotes(function (prevNotes) {\n      return [].concat(_toConsumableArray(prevNotes), [newNote]);\n    });\n  }\n  function deleteNote(id) {\n    setNotes(function (prevNotes) {\n      return prevNotes.filter(function (noteItem, index) {\n        return index !== id;\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app \".concat(currentTheme),\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      currentTheme: currentTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateArea, {\n      onAdd: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), notes.map(function (noteItem, index) {\n      return /*#__PURE__*/_jsxDEV(Note, {\n        id: index,\n        title: noteItem.title,\n        content: noteItem.content,\n        created: noteItem.created,\n        onDelete: deleteNote\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(ThemeChanger, {\n      onThemeChange: handleThemeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KNlGjOQalBB/4G8ZKGpLkvT/1Qg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Note","CreateArea","ThemeChanger","jsxDEV","_jsxDEV","App","_s","_this","_useState","_useState2","_slicedToArray","notes","setNotes","_useState3","_useState4","currentTheme","setCurrentTheme","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","handleThemeChange","theme","addNote","newNote","prevNotes","concat","_toConsumableArray","deleteNote","id","filter","noteItem","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","map","title","content","created","onDelete","onThemeChange","_c","$RefreshReg$"],"sources":["C:/Users/Jianw/Documents/GitHub/ModoList-App/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport ThemeChanger from \"./ThemeChanger\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [currentTheme, setCurrentTheme] = useState(\"light\"); // Initial theme\n\n  // Load notes from local storage when the component mounts\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"modolist-notes\"));\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  // Save notes to local storage whenever the notes state changes\n  useEffect(() => {\n    localStorage.setItem(\"modolist-notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  // Update the theme\n  const handleThemeChange = (theme) => {\n    setCurrentTheme(theme);\n  };\n\n  function addNote(newNote) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className={`app ${currentTheme}`}>\n      <Header currentTheme={currentTheme} />\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            created={noteItem.created}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <ThemeChanger onThemeChange={handleThemeChange} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}